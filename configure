#!/usr/bin/env bash
# usage: configure gappath
# this script creates a `Makefile' from `Makefile.in'

set -e

function error_msg_and_quit {
    echo $1
    echo
    echo "Usage: ./configure [GAPPATH] [--with-pari PARIPATH]"
    echo
    echo " where"
    echo "  - GAPPATH is a path to your GAP installation"
    echo "    (The default for GAPPATH is \"../..\")"
    echo
    echo "  - PARIPATH is a path to you PARI/GP installation"
    echo "    (By default the configure script assumes that the"
    echo "        compiler will find out itself the location)"
    echo
    echo "Aborting... No Makefile is generated."
    echo
    exit 1
}

GAPPATH=../..
PARIPATH=

while [[ $# -gt 0 ]]; do
    key="$1"

    case $key in
        --with-pari)
        PARIPATH="$2"
        EXTRA_CPPFLAGS="-I$2/include"
        EXTRA_LDFLAGS="-L$2/lib"
        if test ! -r $2/include/pari/pari.h; then
            error_msg_and_quit "$2 does not look like a proper pari installation tree"
        fi
        shift
        shift
        ;;
        *)
        GAPPATH=$1
        shift
        ;;
    esac
done

if test ! -r $GAPPATH/sysinfo.gap ; then
    error_msg_and_quit "No file $GAPPATH/sysinfo.gap found."
fi

# handle --with-pari option for custom PARI/GP installation
# "-I/opt/pari/gp-galois/include"
# "-L/opt/pari/gp-galois/lib"
#

echo "Using settings from $GAPPATH/sysinfo.gap"

# update Makefile.gappkg from GAP installation, if possible
test -r "$GAPPATH/etc/Makefile.gappkg" && cp "$GAPPATH/etc/Makefile.gappkg" .

sed \
    -e "s;@GAPPATH@;$GAPPATH;g" \
    -e "s;@PARIPATH@;$PARIPATH;g" \
    -e "s;@EXTRA_CPPFLAGS@;$EXTRA_CPPFLAGS;g" \
    -e "s;@EXTRA_LDFLAGS@;$EXTRA_LDFLAGS;g" \
    Makefile.in > Makefile
